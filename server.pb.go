// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: server.proto

package server

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type SlowThingRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlowThingRequest) Reset()         { *m = SlowThingRequest{} }
func (m *SlowThingRequest) String() string { return proto.CompactTextString(m) }
func (*SlowThingRequest) ProtoMessage()    {}
func (*SlowThingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}
func (m *SlowThingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlowThingRequest.Unmarshal(m, b)
}
func (m *SlowThingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlowThingRequest.Marshal(b, m, deterministic)
}
func (m *SlowThingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlowThingRequest.Merge(m, src)
}
func (m *SlowThingRequest) XXX_Size() int {
	return xxx_messageInfo_SlowThingRequest.Size(m)
}
func (m *SlowThingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SlowThingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SlowThingRequest proto.InternalMessageInfo

type SlowThingResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlowThingResponse) Reset()         { *m = SlowThingResponse{} }
func (m *SlowThingResponse) String() string { return proto.CompactTextString(m) }
func (*SlowThingResponse) ProtoMessage()    {}
func (*SlowThingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}
func (m *SlowThingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlowThingResponse.Unmarshal(m, b)
}
func (m *SlowThingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlowThingResponse.Marshal(b, m, deterministic)
}
func (m *SlowThingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlowThingResponse.Merge(m, src)
}
func (m *SlowThingResponse) XXX_Size() int {
	return xxx_messageInfo_SlowThingResponse.Size(m)
}
func (m *SlowThingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SlowThingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SlowThingResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*SlowThingRequest)(nil), "server.SlowThingRequest")
	proto.RegisterType((*SlowThingResponse)(nil), "server.SlowThingResponse")
}

func init() { proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7) }

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 114 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0x2d, 0x2a,
	0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0x84, 0xb8, 0x04,
	0x82, 0x73, 0xf2, 0xcb, 0x43, 0x32, 0x32, 0xf3, 0xd2, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b,
	0x94, 0x84, 0xb9, 0x04, 0x91, 0xc4, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x8d, 0x02, 0xb9, 0xb8,
	0x41, 0x82, 0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9, 0x42, 0x4e, 0x5c, 0xdc, 0x2e, 0xf9, 0x70,
	0x55, 0x42, 0x12, 0x7a, 0x50, 0xd3, 0xd1, 0x0d, 0x93, 0x92, 0xc4, 0x22, 0x03, 0x31, 0x32, 0x89,
	0x0d, 0xec, 0x14, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0f, 0x45, 0x9e, 0xb6, 0x9a, 0x00,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SlowServiceClient is the client API for SlowService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SlowServiceClient interface {
	DoSlowThing(ctx context.Context, in *SlowThingRequest, opts ...grpc.CallOption) (*SlowThingResponse, error)
}

type slowServiceClient struct {
	cc *grpc.ClientConn
}

func NewSlowServiceClient(cc *grpc.ClientConn) SlowServiceClient {
	return &slowServiceClient{cc}
}

func (c *slowServiceClient) DoSlowThing(ctx context.Context, in *SlowThingRequest, opts ...grpc.CallOption) (*SlowThingResponse, error) {
	out := new(SlowThingResponse)
	err := c.cc.Invoke(ctx, "/server.SlowService/DoSlowThing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SlowServiceServer is the server API for SlowService service.
type SlowServiceServer interface {
	DoSlowThing(context.Context, *SlowThingRequest) (*SlowThingResponse, error)
}

// UnimplementedSlowServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSlowServiceServer struct {
}

func (*UnimplementedSlowServiceServer) DoSlowThing(ctx context.Context, req *SlowThingRequest) (*SlowThingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DoSlowThing not implemented")
}

func RegisterSlowServiceServer(s *grpc.Server, srv SlowServiceServer) {
	s.RegisterService(&_SlowService_serviceDesc, srv)
}

func _SlowService_DoSlowThing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SlowThingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlowServiceServer).DoSlowThing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.SlowService/DoSlowThing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlowServiceServer).DoSlowThing(ctx, req.(*SlowThingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SlowService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "server.SlowService",
	HandlerType: (*SlowServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DoSlowThing",
			Handler:    _SlowService_DoSlowThing_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}
